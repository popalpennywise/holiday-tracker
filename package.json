const express = require('express');
const bodyParser = require('body-parser');
const cors = require('cors');
const { Pool } = require('pg');
require('dotenv').config();

const app = express();
app.use(cors());
app.use(bodyParser.json());
app.use(express.static(__dirname));

// Set up Postgres connection
const pool = new Pool({
  connectionString: process.env.DATABASE_URL,
  ssl: {
    rejectUnauthorized: false
  }
});

// Create table if it doesn't exist
pool.query(`
  CREATE TABLE IF NOT EXISTS holiday_data (
    id SERIAL PRIMARY KEY,
    data JSONB
  );
`, (err) => {
  if (err) console.error('Error creating table:', err);
});

// Load data (just the latest row)
app.get('/api/data', async (req, res) => {
  try {
    const result = await pool.query('SELECT data FROM holiday_data ORDER BY id DESC LIMIT 1');
    const row = result.rows[0];
    res.json(row ? row.data : {});
  } catch (err) {
    console.error(err);
    res.status(500).send('Error fetching data');
  }
});

// Save data
app.post('/api/data', async (req, res) => {
  try {
    await pool.query('INSERT INTO holiday_data (data) VALUES ($1)', [req.body]);
    res.json({ success: true });
  } catch (err) {
    console.error(err);
    res.status(500).send('Error saving data');
  }
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => console.log(`Server running on port ${PORT}`));
